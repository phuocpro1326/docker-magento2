#!/bin/bash

[ "$DEBUG" = "true" ] && set -x

AUTH_JSON_FILE="$(composer -g config data-dir 2>/dev/null)/auth.json"

if [ -f "$AUTH_JSON_FILE" ]; then
    # Get composer auth information into an environment variable to avoid "you need
    # to be using an interactive terminal to authenticate".
    COMPOSER_AUTH=`cat $AUTH_JSON_FILE`
fi

MAGENTO_COMMAND="magento-command"

if [ ! -f "$MAGENTO_ROOT/composer.json" ]; then
    echo "Creating Magento ($M2SETUP_PRODUCT $M2SETUP_VERSION) project from composer"
    rm -fr $MAGENTO_ROOT
    composer create-project \
        --repository-url=https://repo.magento.com/ \
        magento/project-$M2SETUP_PRODUCT-edition=$M2SETUP_VERSION \
        --no-interaction \
        $MAGENTO_ROOT

    # Magento forces Composer to use $MAGENTO_ROOT/var/composer_home as the home directory
    # when running any Composer commands through Magento, e.g. sampledata:deploy, so copy the
    # credentials over to it to prevent Composer from asking for them again
    if [ -f "$AUTH_JSON_FILE" ]; then
        mkdir -p $MAGENTO_ROOT/var/composer_home
        cp $AUTH_JSON_FILE $MAGENTO_ROOT/var/composer_home/auth.json
    fi
else
    echo "Magento installation found in $MAGENTO_ROOT, installing composer dependencies"
    composer --working-dir=$MAGENTO_ROOT install
fi
composer --verison
chown -R www-data:www-data $MAGENTO_ROOT

if [ ! "$M2SETUP_INSTALL_DB" = "false" ]; then

    echo "Install Magento"

    INSTALL_COMMAND="$MAGENTO_COMMAND setup:install \
        --db-host=$M2SETUP_DB_HOST \
        --db-name=$M2SETUP_DB_NAME \
        --db-user=$M2SETUP_DB_USER \
        --db-password=$M2SETUP_DB_PASSWORD \
        --base-url=$M2SETUP_BASE_URL \
        --admin-firstname=$M2SETUP_ADMIN_FIRSTNAME \
        --admin-lastname=$M2SETUP_ADMIN_LASTNAME \
        --admin-email=$M2SETUP_ADMIN_EMAIL \
        --admin-user=$M2SETUP_ADMIN_USER \
        --admin-password=$M2SETUP_ADMIN_PASSWORD"

    if [ -n "$M2SETUP_SESSION_SAVE" ]; then
        INSTALL_COMMAND="$INSTALL_COMMAND --session-save=$M2SETUP_SESSION_SAVE --session-save-redis-host=$M2SETUP_SESSION_SAVE_REDIS_HOST --session-save-redis-db=$M2SETUP_SESSION_SAVE_REDIS_DB"
    fi

    if [ -n "$M2SETUP_CACHE_BACKEND" ]; then
        INSTALL_COMMAND="$INSTALL_COMMAND --cache-backend=$M2SETUP_CACHE_BACKEND --cache-backend-redis-server=$M2SETUP_CACHE_BACKEND_REDIS_SERVER --cache-backend-redis-db=$M2SETUP_CACHE_BACKEND_REDIS_DB"
    fi

    if [ -n "$M2SETUP_PAGE_CACHE" ]; then
        INSTALL_COMMAND="$INSTALL_COMMAND --page-cache=$M2SETUP_PAGE_CACHE --page-cache-redis-server=$M2SETUP_PAGE_CACHE_REDIS_SERVER --page-cache-redis-db=$M2SETUP_PAGE_CACHE_REDIS_DB"
    fi

    if [[ "$M2SETUP_PAGE_CACHE_VARNISH" = "true" ]]; then
        INSTALL_COMMAND="$INSTALL_COMMAND --http-cache-hosts=varnish"
    fi

    if [ -n "$M2SETUP_AMQP_HOST" ]; then
        INSTALL_COMMAND="$INSTALL_COMMAND --amqp-host=$M2SETUP_AMQP_HOST --amqp-port=$M2SETUP_AMQP_PORT --amqp-user=$M2SETUP_AMQP_USER --amqp-password=$M2SETUP_AMQP_PASSWORD"
    fi

    # Only define a backend-frontname if the variable is set, or not empty.
    if [ -n "$M2SETUP_BACKEND_FRONTNAME" ]; then
        INSTALL_COMMAND="$INSTALL_COMMAND --backend-frontname=$M2SETUP_BACKEND_FRONTNAME"
    fi

    if [ "$M2SETUP_USE_SAMPLE_DATA" = "true" ]; then

      $MAGENTO_COMMAND sampledata:deploy
      composer --working-dir=$MAGENTO_ROOT update

      INSTALL_COMMAND="$INSTALL_COMMAND --use-sample-data"
    fi

    $INSTALL_COMMAND
    $MAGENTO_COMMAND index:reindex

else
    echo "Skipping DB installation"
fi

if [ -n "$M2SETUP_AMQP_HOST" ]; then
    echo "Install message queue topology"
    $MAGENTO_COMMAND setup:upgrade
fi

if [[ "$M2SETUP_PAGE_CACHE_VARNISH" = "true" ]]; then
    $MAGENTO_COMMAND config:set system/full_page_cache/caching_application 2
fi

echo "Fixing file permissions.."

[ -f "$MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.php" ] \
  && sed -i 's/0770/0775/g' $MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.php

[ -f "$MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.php" ] \
  && sed -i 's/0660/0664/g' $MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.php

find $MAGENTO_ROOT/pub -type f -exec chmod 664 {} \;
find $MAGENTO_ROOT/pub -type d -exec chmod 775 {} \;
[ -f "$MAGENTO_ROOT/var/generation" ] && find $MAGENTO_ROOT/var/generation -type d -exec chmod g+s {} \;
[ -f "$MAGENTO_ROOT/generated/code" ] && find $MAGENTO_ROOT/generated/code -type d -exec chmod g+s {} \;

chown -R www-data:www-data $MAGENTO_ROOT

echo "Installation complete"
